name: Shared Snyk Test Workflow

####################################################################################################
##  WORKFLOW TRIGGER
####################################################################################################
on:
  # Workflow will run when called by another workflow.
  workflow_call:

####################################################################################################
##  WORKFLOW JOBS
####################################################################################################
jobs:
  # snyk_exclusions fetches the code and finds test or example projects to exclude from Snyk scans.
  snyk_exclusions:
    name: Run Snyk exclusions
    # Using the latest Ubuntu GitHub-hosted runner.
    runs-on: ubuntu-latest
    # Creates output variables to be used in steps or other jobs.
    outputs: 
      SNYK_EXCLUSIONS: ${{ steps.snyk-exclusions.outputs.SNYK_EXCLUSIONS }}
    # # Only runs if the calling was triggered by a pull_request and completed successfully. 
    # if: >
    #   github.event.workflow_run.event == 'pull_request' &&
    #   github.event.workflow_run.conclusion == 'success'

    steps:
      # Downloads the artifact created from the build_and_test workflow containing the workspace from that workflow.
      - name: Download artifact
        uses: actions/github-script@v6
        with:
          script: |
            var artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "workspace"
            })[0];
            var download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: matchArtifact.id,
              archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/workspace.zip', Buffer.from(download.data));

      # Unzips the downloaded workspace.
      - name: Unzip workspace
        run: unzip workspace.zip

      # Creates a comma separated list of directories or files to exclude from code scans.
      - name: Find test or example project(s) to exclude
        id: snyk-exclusions
        shell: pwsh
        run: |
          # Filter to only Test and Example projects and add them to snykExclusions.
          $snykExclusions = Get-ChildItem -Directory | Select-Object Name
          $snykExclusions = $snykExclusions | Where-Object { ($_ -Match 'Tests') -or ($_ -Match 'Example') }
          $snykExclusions = $snykExclusions | ConvertTo-CSV -UseQuotes Never -NoTypeInformation | Select-Object -Skip 1
          $snykExclusions = $snykExclusions -join ','
          echo "snyk exclusions - $snykExclusions"

          # Set output.
          echo "SNYK_EXCLUSIONS=$snykExclusions" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append

      # Using GitHub upload-artifact action to persist the workspace for the next job.
      - name: Upload workspace
        uses: actions/upload-artifact@v3
        with:
          name: workspace
          path: ./

  # snyk_test job runs scan against project dependencies, looking for vulnerabilities.
  snyk_test:
    name: Snyk test
    # This job will not run until snyk_exclusions job finishes successfully.
    needs: snyk_exclusions
    # Using the latest Ubuntu GitHub-hosted runner.
    runs-on: ubuntu-latest

    steps:
      # Using GitHub download-artifact action to get the workspace from the last job.
      - name: Download workspace
        uses: actions/download-artifact@v3
        with:
          name: workspace

      # Using Snyk provided action for dotnet projects.
      - name: Run Snyk test
        id: snyk-test
        uses: snyk/actions/dotnet@master
        env:
          # Uses SNYK_TOKEN from org secrets
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --all-projects --exclude=${{ needs.snyk_exclusions.outputs.SNYK_EXCLUSIONS }}

      - name: Report Snyk test success
        uses: actions/github-script@v6
        # Uses GitHub Actions status check function to check that previous steps completed successfully.
        if: ${{ success() }}
        with:
          script: |
            // URL to Snyk test results.
            const workflowJobs = await github.request('GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ github.run_id }}
            });
            const jobName = "Call snyk-test workflow / Snyk test";
            const snykTestUrl = workflowJobs.data.jobs.find(job => job.name === jobName).html_url;

            // Result of the Snyk test.
            var reportComment = ":white_check_mark: Snyk test found no dependency vulnerabilities.\n\nView the details at: ";

            // Output to console.
            console.log("Report comment: " + reportComment + snykTestUrl);

            // Create a comment with Snyk test result with a link to the job results.
            // await github.request('POST /repos/{owner}/{repo}/issues/{issue_number}/comments', {
            //   owner: context.repo.owner,
            //   repo: context.repo.repo,
            //   issue_number: 3,
            //   body: reportComment + snykTestUrl
            // });

            console.log("Hopefully a PR number... looking for 3");
            console.log("event.number");
            console.log(${{github.event.number}});
            console.log(github.event.number);

            console.log("event.issue.number");
            console.log(${{github.event.issue.number}});
            console.log(github.event.issue.number);

            console.log("github ref");
            console.log(process.env.GITHUB_REF);
            console.log(${{ GITHUB_REF }});

            console.log("github event path");
            console.log(${{ $GITHUB_EVENT_PATH }});


      # - name: Report Snyk test failure
      #   uses: actions/github-script@v6
      #   # Uses GitHub Actions status check function to check if the snyk-test step failed.
      #   if: ${{ failure() && steps.snyk-test.conclusion == 'failure' }}
      #   with:
      #     script: |
      #       // URL to Snyk test results.
      #       const workflowJobs = await github.request('GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs', {
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         run_id: ${{ github.run_id }}
      #       });
      #       const jobName = "Call snyk-test workflow / Snyk test";
      #       const snykTestUrl = workflowJobs.data.jobs.find(job => job.name === jobName).html_url;

      #       // Result of the Snyk test.
      #       var reportComment = ":x: Snyk test found dependency vulnerabilities.\n\nView the details at: ";

      #       // Output to console.
      #       console.log("Report comment: " + reportComment + snykTestUrl);

      #       // Create a comment with Snyk test result with a link to the job results.
      #       await github.request('POST /repos/{owner}/{repo}/issues/{issue_number}/comments', {
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         issue_number: 3,
      #         body: reportComment + snykTestUrl
      #       });

      # - name: Report Snyk test error
      #   uses: actions/github-script@v6
      #   # Uses GitHub Actions status check function to check if there was an error.
      #   if: ${{ failure() && steps.snyk-test.conclusion != 'failure' }}
      #   with:
      #     script: |
      #       // URL to Snyk test results.
      #       const workflowJobs = await github.request('GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs', {
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         run_id: ${{ github.run_id }}
      #       });
      #       const jobName = "Call snyk-test workflow / Snyk test";
      #       const snykTestUrl = workflowJobs.data.jobs.find(job => job.name === jobName).html_url;

      #       // Result of the Snyk test.
      #       var reportComment = ":heavy_exclamation_mark: Snyk test experienced an error.\n\nView the details at: ";

      #       // Output to console.
      #       console.log("Report comment: " + reportComment + snykTestUrl);

      #       // Create a comment with Snyk test result with a link to the job results.
      #       await github.request('POST /repos/{owner}/{repo}/issues/{issue_number}/comments', {
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         issue_number: 3,
      #         body: reportComment + snykTestUrl
      #       });
