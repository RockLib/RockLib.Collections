name: Build and Test

on: [push]
  #push:
    #branches: [main]
  #pull_request:
    #branches: [main]

jobs:
  initialize:
    runs-on: windows-latest
    strategy:
      matrix:
        dotnet-version: ['3.1.x', '6.0.x']

    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
  
  build_and_test:
    needs: initialize
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: dotnet restore
        
      - name: Get .sln
        shell: pwsh
        run: |
          $sln = Get-ChildItem "*.sln" -Name
          echo "SLN_NAME=$sln" >> $env:GITHUB_ENV

      - name: Build
        run: dotnet build "./${{ env.SLN_NAME }}" --configuration Release --no-restore
        
      - name: Test
        run: dotnet test "./${{ env.SLN_NAME }}" --no-restore --verbosity normal #**Tests.csproj

  
  ok_to_publish:
    needs: build_and_test
    environment: Release
    runs-on: windows-latest
    steps:
      - run: echo "Steps are required."
    
  publish:
    needs: ok_to_publish
    runs-on: windows-latest
  
    steps:
      - uses: actions/checkout@v3
      - name: Package 
        run: dotnet pack RockLib.Collections/RockLib.Collections.csproj --configuration Release #--no-build -o "./"

#     - name: Publish
 #       env:

 #         API_KEY: ${{ secrets.[NUGET_API_KEY] }}
 #
 #       #TODO Replace package_version with an env that grabs the correct package version. Also replace RockLib.Collections with an env.
 #       run: dotnet nuget push "RockLib.Collections/bin/Release/RockLib.Collections.[package_version].nupkg" -s "https://api.nuget.org/v3/index.json" -k "$env:API_KEY" 
